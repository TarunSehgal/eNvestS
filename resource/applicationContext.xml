<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   		http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.eNvestDetails" />

	<mvc:annotation-driven />

	<context:property-placeholder location="classpath:config.properties" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="Messages" />

	<!-- <bean id="strongEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor"> 
		<property name="algorithm"> <value>PBEWithMD5AndTripleDES</value> </property> 
		<property name="password"> <value>test</value> </property> </bean> <bean 
		id="LoadEncrypter" class="com.eNvestDetails.util.LoadEncrypter" init-method="init" 
		scope="singleton"/> -->

	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
<mvc:interceptors>
      <bean class="com.eNvestDetails.util.EnvestInterceptor">
    </bean></mvc:interceptors>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.eNvestDetails"></property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<bean id="template" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

 <!-- rule engine processor -->
   <bean id="eNvestOppurtunity" class="com.eNvestDetails.RecommendationEngine.InitiateRecommendation">
      <property name="firstStep">
         <ref bean="testRule"/>
      </property>
      <!--  list all Recommendation hers -->
      <property name="rules">
         <list>
            <value>testRule</value>
            <value>userProfile</value>
            <value>cdProductRule</value>
            <value>hyaProductRule</value>
            <value>hyaProductRule</value>
            <value>miProductRule</value>
         </list>
      </property>
   </bean>	
   <!-- <bean id="eNvestProductRules" class="com.eNvestDetails.RecommendationEngine.InitiateRecommendation">
      <property name="firstStep">
         <ref bean="testRule"/>
      </property>
       list all Recommendation hers
      <property name="rules">
         <list>
            <value>cdProductRule</value>
            <value>hyaProductRule</value>
            <value>hyaProductRule</value>
            <value>miProductRule</value>
         </list>
      </property>
   </bean> -->
	 <!-- Recommendation -->
   <bean id="testRule" class="com.eNvestDetails.Recommendation.TestOppurtunity">
		<property name="ruleEnable">
        <value>true</value></property>
   </bean>   
   <bean id="cdProductRule" class="com.eNvestDetails.Recommendation.CDRule">
		<property name="ruleEnable">
        <value>true</value></property>
   </bean>
   <bean id="hyaProductRule" class="com.eNvestDetails.Recommendation.HYARule">
		<property name="ruleEnable">
        <value>true</value></property>
   </bean>
   <bean id="miProductRule" class="com.eNvestDetails.Recommendation.MipRule">
		<property name="ruleEnable">
        <value>true</value></property>
   </bean>
   <bean id="goalSeekProductRule" class="com.eNvestDetails.Recommendation.GoalSeekRule">
		<property name="ruleEnable">
        <value>false</value></property>
   </bean>
   <bean id="userProfile" class="com.eNvestDetails.Recommendation.UserProfile">
		<property name="ruleEnable">
        <value>true</value></property>
   </bean>
   
   <bean id="userDao" class="com.eNvestDetails.dao.UserDao"></bean>

<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="${app.secret}" />
		
	</bean>
	<security:debug/>
	<!-- <security:http pattern="/UserService/users/registerUser" security="none"/>
	<security:http pattern="/UserService/users/authenticate" security="none"/> -->
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userDao">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- <security:websocket-message-broker
	same-origin-disabled="true" /> -->
	<security:http
		entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager"
		create-session="stateless">
		<security:csrf disabled="true"/>				
		<security:intercept-url pattern="/envest/userservice/users/authenticate" access="permitAll" />
		<security:intercept-url pattern="/UserService/users/registerUser" access="permitAll" />
		<security:custom-filter ref="cors" position="FIRST" />
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="PRE_AUTH_FILTER" />
		<security:intercept-url method="GET" pattern="/eNvest/**" access="hasRole('USER')" />
		<security:intercept-url method="PUT" pattern="/eNvest/**" access="hasRole('USER')" />
		<security:intercept-url method="POST" pattern="/eNvests/**" access="hasRole('USER')" />
		<security:intercept-url method="DELETE" pattern="/eNvests/**" access="hasRole('USER')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.eNvestDetails.security.UnauthorizedEntryPoint" />
	<bean id="cors" class="com.eNvestDetails.security.CORSFilter" />

	<bean id="authenticationTokenProcessingFilter" class="com.eNvestDetails.security.AuthenticationTokenProcessingFilter">
		<constructor-arg ref="userDao" />
	</bean>

</beans>
